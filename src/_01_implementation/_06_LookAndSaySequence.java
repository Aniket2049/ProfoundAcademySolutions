package _01_implementation;

import java.util.Scanner;

// https://profound.academy/algorithms-data-structures/look-and-say-sequence-NR6nz8jLfm7xZSHbGplS

/*
Look-and-say sequence
Having a number n, a look-and-say sequence is generated by reading the digits of 
n as they appear in the number. So, if the number is 43556777, we would read it
as:
One 4 (14)
One 3 (13)
Two 5s (25)
One 6 (16)
Three 7s (37)
So, the next element in the sequence following the number 43556777, would be 
1413251637. Given an initial number n, you are asked to calculate the resulting 
number after k steps.

Input
The first line of the input contains the initial number n (1 ≤ n ≤ 10^6).
The second line of the input contains the number of steps k (0 ≤ k ≤ 30).

Output
The program should print the resulting number after k steps in the look-and-say 
sequence when starting with the number n.

Examples
+---------------+---------------+
|Input        	|Output			|
+---------------+---------------+
|6				|132116			|
|4				|				|
+---------------+---------------+
|33333			|53				|
|1				|				|
+---------------+---------------+

Explanation
1. 6 -> 16 -> 1116 -> 3116 -> 132116
2. 33333 -> 53
*/

public class _06_LookAndSaySequence {

	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		int n = input.nextInt();
		int k = input.nextInt();
		input.close();

		//--------Input Read--------

		String numAsStr = String.valueOf(n);
		while (k != 0) {
			StringBuilder res = new StringBuilder();
			int i = 0;
			while (i < numAsStr.length()) {
				int lengthOfCurrentChar = 1;
				while (i + lengthOfCurrentChar < numAsStr.length()
						&& numAsStr.charAt(i + lengthOfCurrentChar) == numAsStr.charAt(i)) {
					lengthOfCurrentChar++;
				}

				res.append(lengthOfCurrentChar);
				res.append(numAsStr.charAt(i));
				i = i + lengthOfCurrentChar;
			}

			numAsStr = res.toString();
			k--;
		}

		System.out.println(numAsStr);
	}

}
